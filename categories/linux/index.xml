<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>linux - 分类 - 编程日志</title><link>https://mengdemao.github.io/categories/linux/</link><description>linux - 分类 - 编程日志</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>mengdemao19951021@163.com (mengdemao)</managingEditor><webMaster>mengdemao19951021@163.com (mengdemao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 28 Oct 2021 07:40:38 +0800</lastBuildDate><atom:link href="https://mengdemao.github.io/categories/linux/" rel="self" type="application/rss+xml"/><item><title>Idle</title><link>https://mengdemao.github.io/idle/</link><pubDate>Thu, 28 Oct 2021 07:40:38 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/idle/</guid><description>IDLE调度器类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62</description></item><item><title>Fair</title><link>https://mengdemao.github.io/fair/</link><pubDate>Thu, 28 Oct 2021 07:40:31 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/fair/</guid><description>完全公平调度器 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 const struct sched_class fair_sched_class = { .next = &amp;amp;idle_sched_class, .enqueue_task = enqueue_task_fair, .dequeue_task = dequeue_task_fair, .yield_task = yield_task_fair, .yield_to_task = yield_to_task_fair, .check_preempt_curr = check_preempt_wakeup,</description></item><item><title>系统调度</title><link>https://mengdemao.github.io/sched/</link><pubDate>Mon, 04 Oct 2021 12:10:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/sched/</guid><description>系统调度 主调度器schedule 周期调度器scheduler_tick 1 周期调度器函数实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void scheduler_tick(void) { int cpu = smp_processor_id(); // CPUID struct</description></item></channel></rss>