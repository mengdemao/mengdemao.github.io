<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Linux - 分类 - 编程日志</title><link>https://mengdemao.github.io/categories/linux/</link><description>Linux - 分类 - 编程日志</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>mengdemao19951021@gmail.com (mengdemao)</managingEditor><webMaster>mengdemao19951021@gmail.com (mengdemao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 12 Mar 2023 15:31:42 +0800</lastBuildDate><atom:link href="https://mengdemao.github.io/categories/linux/" rel="self" type="application/rss+xml"/><item><title>Uboot</title><link>https://mengdemao.github.io/uboot/</link><pubDate>Sun, 12 Mar 2023 15:31:42 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/uboot/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/03.webp" referrerpolicy="no-referrer">
&lt;/div>u-boot源码阅读 1 构建源码 1 2 3 4 5 6 7 8 9 10 11 12 # 下载源码 $ git clone git@github.com:Embedfire/ebf_6ull_uboot.git # 清理编译信息 $ make ARCH=arm clean # 配置信息 make ARCH=arm mx6ull_14x14_evk_emmc_defconfig make ARCH=arm mx6ull_14x14_evk_nand_defconfig # 执行编译 make -j$(nproc) ARCH=arm CROSS_COMPILE=arm-none-eabi- 2 功能</description></item><item><title>完全公平调度器</title><link>https://mengdemao.github.io/cfs/</link><pubDate>Thu, 28 Oct 2021 07:40:31 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/cfs/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/13.webp" referrerpolicy="no-referrer">
&lt;/div>需要处理的问题? 如何确定哪个进程可以运行 进程切换发生后,老的进程去了哪里,新的进程如何变化 PLET实现中,谁负责移动调度实体 1 虚拟时间(vr</description></item><item><title>物理页面分配器</title><link>https://mengdemao.github.io/page_allocator/</link><pubDate>Thu, 28 Oct 2021 07:40:31 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/page_allocator/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/11.webp" referrerpolicy="no-referrer">
&lt;/div>1 alloc_pageslinux常用的物理界面分配器的函数是alloc_pages,下面分析是如何实现的. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #define</description></item><item><title>调度器基础</title><link>https://mengdemao.github.io/scheduler/</link><pubDate>Mon, 04 Oct 2021 12:10:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/scheduler/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/10.webp" referrerpolicy="no-referrer">
&lt;/div>调度器分为主调度器和周期调度器 但是本节不考虑调度器的具体实现 只进行大方向接口的分析 系统调度器基础 完全公平调度器 1 权重计算 1.1 优先级计算优先级 1</description></item></channel></rss>