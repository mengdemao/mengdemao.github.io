<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - 编程日志</title><link>https://mengdemao.github.io/posts/</link><description>所有文章 | 编程日志</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>mengdemao19951021@163.com (mengdemao)</managingEditor><webMaster>mengdemao19951021@163.com (mengdemao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 07 Jul 2022 21:44:09 +0800</lastBuildDate><atom:link href="https://mengdemao.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Nfs</title><link>https://mengdemao.github.io/nfs/</link><pubDate>Mon, 03 May 2021 18:02:48 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/nfs/</guid><description>nfs服务 1 安装 1 sudo apt-get install nfs-kernel-server 2 设置导出 1 /home/exports *(rw,nohide,insecure,no_subtree_check,async,no_root_squash) 3 开启服务 1 sudo /etc/init.d/nfs-kernel-server restart 4 测试 1 2 sudo mount -t nfs -o nolock,vers=3 127.0.0.1:/home/exports /mnt ls /mnt</description></item><item><title>Hugo教程</title><link>https://mengdemao.github.io/hugo/</link><pubDate>Tue, 04 May 2021 22:53:09 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/hugo/</guid><description>1 基本操作 1.1 安装hugo在linux/windows上只能通过直接release下载, 1.2 创建网站 1 hugo new site 路径 1.3 添加主题 将主题直接添加到the</description></item><item><title>Linux等待队列实现</title><link>https://mengdemao.github.io/wait_queue/</link><pubDate>Tue, 04 May 2021 23:17:55 +0000</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/wait_queue/</guid><description>等待事件是建立在调度的基础之上的一种同步机制 使用 1 等待队列头 1 2 3 4 5 struct __wait_queue_head { wq_lock_t lock; struct list_head task_list; }; typedef struct __wait_queue_head wait_queue_head_t; 2 等待队列实体 1 2 3 4 5 6 struct __wait_queue { unsigned int flags; struct task_struct *</description></item><item><title>Page_allocator</title><link>https://mengdemao.github.io/page_allocator/</link><pubDate>Sun, 09 May 2021 16:03:16 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/page_allocator/</guid><description>页面分配器核心函数: __alloc_pages_nodemask gfp_mask : 分配掩码 order : 分配阶数 preferred_nid nodemask 1 核心函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40</description></item><item><title>驱动模型</title><link>https://mengdemao.github.io/drivermodel/</link><pubDate>Fri, 01 Oct 2021 23:32:46 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/drivermodel/</guid><description>1 简述 驱动模型 顶级kobject 解释 block 块设备链接&amp;ndash;&amp;gt;/sys/deives相关文件 bus 存放各种总线文件 class 各种设备类 dev 存放(字</description></item><item><title>linux内核系统调度基础</title><link>https://mengdemao.github.io/sched/</link><pubDate>Mon, 04 Oct 2021 12:10:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/sched/</guid><description>1 调度器实现 调度器分为主调度器和周期调度器 1.1 任务调度 2 完全公平调度器 3 调度器增强</description></item><item><title>进程创建</title><link>https://mengdemao.github.io/fork/</link><pubDate>Mon, 04 Oct 2021 12:11:31 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/fork/</guid><description>fork linux创建线程的函数 fork &amp;ndash;&amp;gt; do_fork do_fork的执行线路 do_fork函数原型 1 2 3 4 5 6 long _do_fork(unsigned long clone_flags, unsigned long stack_start, unsigned long stack_size, int __user *parent_tidptr, int __user *child_tidptr, unsigned long tls); clone_flags stack_start stack_size parent_tidptr child_tidptr tls</description></item><item><title>HTML5基础教程</title><link>https://mengdemao.github.io/html5/</link><pubDate>Thu, 07 Oct 2021 11:51:59 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/html5/</guid><description>1 网页结构 hugo中markdown可以直接渲染html,可以直接得到效果 但是网页基础结构却不可以编写,这样会破坏渲染过程 1 2 3 4 5 6 7 8 9</description></item><item><title>CSS3基础教程</title><link>https://mengdemao.github.io/css/</link><pubDate>Thu, 07 Oct 2021 11:52:18 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/css/</guid><description>1 基础知识 Cascading Style Sheets(层叠样式表) HTML + CSS + JavaScript =&amp;gt; 名词 + 形容词 + 动词 CSS可以认为对原始的HTML进行美化 1.1 快速入门 CSS是什么 CSS怎么</description></item><item><title>javascript基础教程</title><link>https://mengdemao.github.io/javascript/</link><pubDate>Thu, 07 Oct 2021 11:52:24 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/javascript/</guid><description>1 基础知识 JavaScript是一种运行在浏览器中的解释型的编程语言 在hugo中运行javacsript脚本,可以使用hugo的script</description></item><item><title>完全公平调度器</title><link>https://mengdemao.github.io/fair/</link><pubDate>Thu, 28 Oct 2021 07:40:31 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/fair/</guid><description>1 调度器类分析 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 const struct sched_class fair_sched_class = { .next = &amp;amp;idle_sched_class, .enqueue_task = enqueue_task_fair, .dequeue_task = dequeue_task_fair, .yield_task = yield_task_fair, .yield_to_task = yield_to_task_fair, .check_preempt_curr = check_preempt_wakeup,</description></item><item><title>Bsdiff</title><link>https://mengdemao.github.io/bsdiff/</link><pubDate>Sat, 30 Oct 2021 17:24:30 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/bsdiff/</guid><description>bsdiff bsdiff and bspatch are tools for building and applying patches to binary files. By using suffix &amp;gt; sorting (specifically, Larsson and Sadakane&amp;rsquo;s qsufsort) and taking advantage of how executable files change, bsdiff routinely produces binary patches 50-80% smaller than those produced by Xdelta, and 15% smaller than those produced by .RTPatch (a $2750/seat commercial patch tool) &amp;ndash; 直接摘抄自官网 详情可以查</description></item><item><title>Buildroot</title><link>https://mengdemao.github.io/buildroot/</link><pubDate>Sun, 13 Mar 2022 08:29:42 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/buildroot/</guid><description>1 下载buildroot 1 2 3 git clone --depth=1 https://git.busybox.net/buildroot git branch -a [new branch] git checkout [new branch] 2 快速开始 可以先找到一个类似的配置文件,配置文件在下载的根目录的configs文件夹</description></item><item><title>pthread源码分析</title><link>https://mengdemao.github.io/pthread/</link><pubDate>Sun, 01 May 2022 10:37:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/pthread/</guid><description>pthread源码分析 基于musl源码库与glibc库,其中musl提供分析的思路,glibc分析具体实现 1 pthread句柄 1 2 3 4 5 6 7</description></item><item><title>C++模板</title><link>https://mengdemao.github.io/cxx_template/</link><pubDate>Sat, 18 Jun 2022 14:21:30 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/cxx_template/</guid><description>&lt;div class="featured-image">
&lt;img src="/featuredImage/01.png" referrerpolicy="no-referrer">
&lt;/div>1 相关知识gcc中typeof关键字用来检查变量类型,那么则可以用来判断魔板生成中的数据类型, 但是在C++中存在这另外的运算符typeid,</description></item><item><title>线程局部存储分析</title><link>https://mengdemao.github.io/thread_local_storage/</link><pubDate>Thu, 07 Jul 2022 08:04:54 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/thread_local_storage/</guid><description>&lt;div class="featured-image">
&lt;img src="/featuredImage/02.jpg" referrerpolicy="no-referrer">
&lt;/div>1 前言 在Linux C/C++编程时不可避免的会遇到以下的需求,全局变量线程共享;最为典型的功能则是errno,变量 在程序的任何地方都可以访问</description></item><item><title>编译原理</title><link>https://mengdemao.github.io/compiler_principle/</link><pubDate>Thu, 07 Jul 2022 21:44:09 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/compiler_principle/</guid><description>&lt;div class="featured-image">
&lt;img src="/featuredImage/03.jpg" referrerpolicy="no-referrer">
&lt;/div>1 词法分析 1.1 概述 词法分析是编译原理的第一个阶段,词法分析的任务是读入源程序的输入字符,生成一个个的单词,其主要的功能是为语法分析提供词法单元</description></item></channel></rss>