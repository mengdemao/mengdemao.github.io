<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>编程日志</title><link>https://mengdemao.github.io/</link><description>个人知识的总结、提高、归纳</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>mengdemao19951021@163.com (mengdemao)</managingEditor><webMaster>mengdemao19951021@163.com (mengdemao)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 12 Feb 2023 12:56:02 +0800</lastBuildDate><atom:link href="https://mengdemao.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux内核源码阅读</title><link>https://mengdemao.github.io/read_linux/</link><pubDate>Sun, 12 Feb 2023 12:56:02 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/read_linux/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/03.jpg" referrerpolicy="no-referrer">
&lt;/div>Linux内核源码阅读</description></item><item><title>FreeRTOS</title><link>https://mengdemao.github.io/freertos/</link><pubDate>Sun, 30 Oct 2022 14:23:11 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/freertos/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/04.jpg" referrerpolicy="no-referrer">
&lt;/div>1 基本概念 1.1 任务 一个死循环的函数运行(在RTOS中) 1.2 函数运行环境(context) 寄存器 堆栈信息 1.3 函数执行原理 pc/lr push/pop 下面写一个简单的函数,测</description></item><item><title>Arm笔记</title><link>https://mengdemao.github.io/arm/</link><pubDate>Sat, 24 Sep 2022 10:37:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/arm/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/12.jpg" referrerpolicy="no-referrer">
&lt;/div>1 体系结构参考文件 arm指令手册1 arm指令手册2 arm指令手册3 1.1 相关术语 流水线 DSP Jazelle ThumbEE Thumb-2 TrustZone VFP NEON LAPE big.LITTLE 1.2 工具链 文件名 详解 addr2line 把程序地址转化为文件</description></item><item><title>Bsdiff</title><link>https://mengdemao.github.io/bsdiff/</link><pubDate>Wed, 17 Aug 2022 17:24:30 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/bsdiff/</guid><description><![CDATA[<div class="featured-image">
                <img src="featuredImage/10.jpg" referrerpolicy="no-referrer">
            </div>1 引言 bsdiff and bspatch are tools for building and applying patches to binary files. By using suffix &gt; sorting (specifically, Larsson and Sadakane&rsquo;s qsufsort) and taking advantage of how executable files change, bsdiff routinely produces binary patches 50-80% smaller than those produced by Xdelta, and 15% smaller than those produced by .RTPatch (a $2750/seat commercial patch tool) &ndash; 直接摘抄自官网 详情可]]></description></item><item><title>C++基础笔记</title><link>https://mengdemao.github.io/cxx_basic/</link><pubDate>Thu, 28 Jul 2022 22:37:59 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/cxx_basic/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/13.jpg" referrerpolicy="no-referrer">
&lt;/div>C++基础笔记</description></item><item><title>C++提高笔记</title><link>https://mengdemao.github.io/cxx_enhance/</link><pubDate>Thu, 28 Jul 2022 22:37:49 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/cxx_enhance/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/13.jpg" referrerpolicy="no-referrer">
&lt;/div>C++提高笔记</description></item><item><title>C++增强笔记</title><link>https://mengdemao.github.io/cxx_advance/</link><pubDate>Thu, 28 Jul 2022 22:37:49 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/cxx_advance/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/13.jpg" referrerpolicy="no-referrer">
&lt;/div>C++增强笔记</description></item><item><title>线程局部存储分析</title><link>https://mengdemao.github.io/pthread_local_storage/</link><pubDate>Mon, 18 Jul 2022 21:27:25 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/pthread_local_storage/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/02.jpg" referrerpolicy="no-referrer">
&lt;/div>1 前言 在Linux C/C++编程时不可避免的会遇到以下的需求,全局变量线程共享;最为典型的功能则是errno,变量 在程序的任何地方都可以访问</description></item><item><title>pthread线程同步</title><link>https://mengdemao.github.io/pthread_lock/</link><pubDate>Mon, 18 Jul 2022 21:27:24 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/pthread_lock/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/02.jpg" referrerpolicy="no-referrer">
&lt;/div>1 futex原理 高级锁的实现都是与futex实现相关 Futex是Fast Userspace muTexes的缩写 常用的锁都是通过futex实现的 mutex (互斥锁) rwlock</description></item><item><title>pthread线程源码分析</title><link>https://mengdemao.github.io/pthread_thread/</link><pubDate>Mon, 18 Jul 2022 21:27:23 +0800</pubDate><author><name>mengdemao</name></author><guid>https://mengdemao.github.io/pthread_thread/</guid><description>&lt;div class="featured-image">
&lt;img src="featuredImage/02.jpg" referrerpolicy="no-referrer">
&lt;/div>基于musl源码库与glibc库,其中musl提供分析的思路,glibc分析具体实现 1 调试环境搭建 1.1 下载源码执行/usr/lib/libc.</description></item></channel></rss>